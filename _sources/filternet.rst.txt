FilterNet
=========
Many models of the nervous system utilize filters – mathematical objects that take in multi-dimensional data and return an output, typically time series. FilterNet is a module of BMTK that allows users to operate with filters.

A typical application may be processing of peripheral sensory input – for example, an array of filters may be used to represent retinal cells, with the input being movies and the output being retinal firing rates or spikes that in turn can be used as inputs to neurons deeper in the brain explicitly simulated using other modules of BMTK, such as BioNet or PointNet.

Current implementation of FilterNet contains the LGNModel simulator, which was created to provide thalamocortical `inputs to biologically realistic models of the mouse visual cortex <http://portal.brain-map.org/explore/models/mv1-all-layers>`_. This simulator assumes that the input is a movie (a 3D array – two dimensions for space and one for time) and produces the output which is a time-varying firing rate for each filter. A filter here represents an individual cell in the LGN of mouse thalamus, which projects to the visual cortex. Realistic parameters for such filters, parameterized based on the experimental recordings, `are available online <http://portal.brain-map.org/explore/models/mv1-all-layers>`_.

In the future, more general functions modeling the input-output filter relationship and/or more general types of inputs (for example, representing other sensory stimuli, beyond the visual 3D arrays) can be added per user demand. The current FilterNet code can also be easily extended by users to include more general forms of filters than those already supported.


Features
--------
* Supports a number of stimuli inputs including:
 * Static and moving grating
 * Full field flashes
 * Static images
 * Short movies.


Installation
------------
Filter supports both Python 2.7 or Python 3.6+, see our `Installation instructions <installation>`_.



Documentation and Tutorials
---------------------------
For more information about FilterNet and LGNModel in particular, please contact the main developers Ram Iyer (rami at alleninstitute dot org)
and Yazan Billeh (yazanb at alleninstitute dot org).


Examples
--------
The AllenInstitute/bmtk repo contains a number of FilterNet examples, many with pre-built networks and can be immediately ran. These
tutorials will have the folder prefix *filter_* and to run them in the command-line simply call::

  $ python run_filternet.py config.json


Current examples
++++++++++++++++
* `filter_graitings <https://github.com/AllenInstitute/bmtk/tree/develop/docs/examples/filter_graitings>`_ - An example of a 2 second static grating stimuli on the LGN receptive field.
